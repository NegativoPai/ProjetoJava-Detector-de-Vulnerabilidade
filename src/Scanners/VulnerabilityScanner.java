package Scanners;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Timestamp;
import config.DatabaseConnection;
import java.time.LocalDateTime;
import config.DatabaseConnection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.zaproxy.clientapi.core.ClientApi;
import org.zaproxy.clientapi.core.ClientApiException;
import org.zaproxy.clientapi.core.ApiResponse;

public class VulnerabilityScanner {
    private ClientApi api;

    public VulnerabilityScanner(String host, int port, String apiKey) {
        this.api = new ClientApi(host, port, apiKey);
    }

    public ScanResult scan(String target) {
        try {
            ApiResponse response = api.ascan.scan(target, "True", "False", null, null, null);
            return new ScanResult(response.toString(), 200, "Scan iniciado com sucesso.");
        } catch (ClientApiException e) {
            e.printStackTrace();
            return new ScanResult("Erro ao escanear: " + e.getMessage(), 500, "Falha ao escanear.");
        }
    }
    public void salvarResultado(String target, int statusCode, String message){
        String sql = "insert into scan_results (target, status_code, message, timestamp) values (?, ?, ?, ?)";
        
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)){
            
            stmt.setString(1, target);
            stmt.setInt(2, statusCode);
            stmt.setString(3, message);
            stmt.setTimestamp(4, Timestamp.valueOf(LocalDateTime.now()));
            
            stmt.executeUpdate();
            
        } catch (SQLException e){
            e.printStackTrace();
        }
    }
    public void iniciarScan(String target){
            int statusCode = 200;
            String message = "Scan completed successfully";
            
            salvarResultado(target, statusCode, message);
        }
    //Buscando o escaneamento do banco de dados
    public List<String> listarResultados(){
        List<String> resultados = new ArrayList<>();
        String sql = "select target, status_code, message, timestamp from scan_results";
        
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql);
                ResultSet rs = stmt.executeQuery()){
            
            while (rs.next()){
                String resultado = String.format("Alvo: %s | Status: %d | Mensagem: %s | Data: %s",
                        rs.getString("target"), rs.getInt("status_code"), rs.getString("message"),
                        rs.getTimestamp("timestamp").toString());
                resultados.add(resultado);
            }
        }catch (SQLException e){
           e.printStackTrace();
        } 
        
        return resultados;
    }
    public List<String> listarResultadosPorAlvo(String target){
        List<String> resultados = new ArrayList<>();
        String sql = "select target, status_code, message, timestamp from scan_results where target = ?";
        
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)){
            
            stmt.setString(1, target);
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()){
                String resultado = String.format("Alvo: %s | Status: %d | Mensagem: %s | Data: %s",
                        rs.getString("target"), rs.getInt("status_code"), rs.getString("message"),
                        rs.getTimestamp("timestamp").toString());
                resultados.add(resultado);
            }
            
        } catch (SQLException e){
            e.printStackTrace();
        }
        
        return resultados;
    }
}